% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_imageOutput.R
\name{caseOutput}
\alias{caseOutput}
\alias{case}
\title{Interactive display of radiographs associated with a requested case}
\usage{
caseOutput(id, ...)

case(input, output, session, caseIdIn)
}
\arguments{
\item{id}{chr(1) namespace for the module, decided by the caller at the time the module is used}

\item{...}{passed to \code{\link[EBImage]{renderDisplay}}}

\item{input, output, session}{shiny server io}

\item{caseIdIn}{reactive expression that returns chr(1) case id to display}
}
\value{
shiny module with interactive browsing of case imgs
}
\description{
Wraps \code{\link{display_case}}
}
\examples{
if (interactive()) {

cases_avail = candiOpt(large_img_dir) \%>\% list.files() \%>\% fp_stem() \%>\%
    str_split(pattern = "_") \%>\%
    map_chr(2) \%>\% unique() \%>\% as.integer() \%>\% sort()

shinyApp(
    ui = fluidPage(
        selectInput("caseIdIn", "Case Id:", choices = cases_avail),
        verbatimTextOutput("selectedCaseTxt"),
        caseOutput("show_case"),
        caseOutput("show_case2", height = "1000px")
    ),
    server = function(input, output, session) {
        output$selectedCaseTxt <- renderPrint(input$caseIdIn)
        callModule(case, "show_case", caseIdIn = reactive(input$caseIdIn))
        callModule(case, "show_case2", caseIdIn = reactive(input$caseIdIn))
    }
)}
}
